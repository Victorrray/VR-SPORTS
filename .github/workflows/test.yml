name: Tests & Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Lint and format checks
  lint:
    runs-on: ubuntu-latest
    name: Lint & Format
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Check formatting
        run: npm run format:check

  # Backend unit tests
  backend-tests:
    runs-on: ubuntu-latest
    name: Backend Unit Tests
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run backend tests
        run: npm run test:unit
        env:
          NODE_ENV: test
          LOG_LEVEL: error
      
      - name: Upload coverage
        if: always()
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/coverage-final.json
          flags: backend
          name: backend-coverage

  # Security checks
  security:
    runs-on: ubuntu-latest
    name: Security Checks
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      
      - name: Run npm audit
        run: npm audit --audit-level=moderate || true
      
      - name: Scan for secrets
        run: npm run scan:secrets

  # Summary job
  test-summary:
    runs-on: ubuntu-latest
    name: Test Summary
    needs: [lint, backend-tests, security]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.lint.result }}" = "failure" ]; then
            echo "❌ Lint checks failed"
            exit 1
          fi
          if [ "${{ needs.backend-tests.result }}" = "failure" ]; then
            echo "❌ Backend tests failed"
            exit 1
          fi
          if [ "${{ needs.security.result }}" = "failure" ]; then
            echo "⚠️ Security checks found issues (non-blocking)"
          fi
          echo "✅ All critical checks passed!"
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ All checks passed! Ready to merge.'
            })
